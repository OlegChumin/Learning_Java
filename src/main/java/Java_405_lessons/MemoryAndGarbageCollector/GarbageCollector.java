package Java_405_lessons.MemoryAndGarbageCollector;

import java.util.Date;

public class GarbageCollector {
    public static void main(String[] args) {
       method();
        // здесь date уже помечен как возможный на удаление для Garbage Collector
        //гарантий что GC удалит date нет никаких, он смотрит ссылки
        // когда нет ссылок date и date2 может быть удален
        method2();
        //date3 потерял ссылку помечен на удаление
        System.out.println();
        Date date4 = method2(); // новому объекту присваиваем ссылку от date3 заново созданному method2()
        //здесь пока ссылка есть
        date4 = null; // вот так можно пометить объект на удаление GC удалит его при первой же возможности
        //GC когда он вызывается и когда будет работать процессом управлять практически невозможно
        System.gc(); // Run garbage collector
        //Вызов метода gc предполагает, что виртуальная машина Java затрачивает усилия на переработку неиспользуемых
        // объектов, чтобы сделать память, которую они в настоящее время занимают, доступной для повторного
        // использования виртуальной машиной Java. Когда управление возвращается из вызова метода, виртуальная машина
        // Java сделала все возможное, чтобы освободить пространство для всех неиспользуемых объектов. Нет никакой
        // гарантии, что это усилие переработает какое-либо конкретное количество неиспользуемых объектов, освободит
        // какое-либо конкретное пространство или завершится в любое конкретное время, если вообще будет, до того,
        // как метод вернется или когда-либо.
        // механизм зачистки не запускается когда вызван gc

    }

    private static void method() {
        Date date, date2; // объявляем переменную типа Date (пока ничего не создается)
        date = new Date(); // создаем объект класса Date (под него в Heap/Куче выделяется память)
        new Date(); // так тоже создается еще один объект Date но ссылки на него нет, просто теряем его
        date2 = new Date(); // еще один объект date2
        System.out.println(date);
    } //в конце работы после вызова method() объект больше не нужен, ссылка на него пропадает

    private static Date method2() {
    Date date3 = new Date();
        System.out.println(date3);
    return date3;
    }
}
